#!/usr/bin/env ruby
require_relative '../lib/patter'
include Patter

class Main
    def self.run(opts)
        if opts['--version']
            puts VERSION
            exit
        end

        opts['--count'].to_i.times do
            puts Pattern.new(opts['<pattern>']).to_s
        end
    end
end

PROGRAM_NAME = File.basename($PROGRAM_NAME)

usage = <<~EOF
    Usage:
        #{PROGRAM_NAME} [options] <pattern>
        #{PROGRAM_NAME} ( --version | --help )

    Generate strings from <pattern>.

    Options:
        -n, --count N       Number of patterns to generate [default: 10]
        -v, --version       Show version
        -h, --help          Show help

    Tags:
        {A} adjective       {N} noun
        {S} symbol          {D} digit
        {C} character

    Modifiers:
        s: plural           t: titlecase
        u: uppercase        l: lowercase
        a: AlTeRnAtE case
        <number>: repeat <number> times

    Apply modifiers using a colon after the tag name.

    Examples:
        Ten random uppercase letters: {C:10u}
        Three camelcase nouns:        {N:3t}
        Plural, titlecase noun:       {N:ts}
        Uppercase adjective:          {A:u}
        Five random digits:           {D:5}
        A username:                   {A}_{N}
EOF

begin
    Main.run(Docopt.docopt(usage))
rescue Docopt::Exit
    puts usage
    exit 2
end
